# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-10 15:52
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FOMOUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('zipcode', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('pref_contact', models.TextField(blank=True, choices=[['text', 'Text'], ['email', 'Email'], ['voice', 'Voice']], null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('gender', models.TextField(blank=True, choices=[['M', 'Male'], ['F', 'Female'], ['other', 'Other']], null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_stamp', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField()),
                ('ext_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('status', models.TextField(blank=True, choices=[['active', 'Active'], ['purchased', 'Purchased'], ['removed', 'Removed']], default='active', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HistoryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_stamp', models.DateTimeField(auto_now=True)),
                ('status', models.TextField(blank=True, choices=[['viewed', 'Viewed'], ['cartitem', 'CartItem']], default='viewed', null=True)),
                ('FOMOUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='account.FOMOUser')),
            ],
        ),
    ]
